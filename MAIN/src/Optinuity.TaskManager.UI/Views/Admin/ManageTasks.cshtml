@model TaskDefinationVM

<script src="~/Content/js/summernote.min.js"></script>
<link href="~/Content/css/summernote.css" rel="stylesheet" />
@section javascripts{
    <script type="text/javascript">
        
        $(function () {
            $('#summernote').summernote({
                toolbar: [
                  // [groupName, [list of button]]
                  ['style', ['bold', 'italic', 'underline', 'clear']],
                  ['font', ['strikethrough', 'superscript', 'subscript']],
                  ['fontsize', ['fontsize']],
                  ['color', ['color']],
                  ['para', ['ul', 'ol', 'paragraph']],
                  ['height', ['height']],
                  ['link', ['linkDialogShow', 'unlink']]
                ]
            });
            $('.date-control').datepicker();
        });
    </script>
}

<div class="row">
    <div class="col-md-12">
        @if (Model.SuccessfulMessage != null && Model.SuccessfulMessage.Length > 0)
        {
            <div class="alert alert-success col-md-8 col-sm-12">
                <button class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                <h4><i class="icon-ok-sign"></i> Completed</h4>
                <p>@Model.SuccessfulMessage</p>
            </div>
        }
        else if (Model.ErrorMessage != null && Model.ErrorMessage.Length > 0)
        {
            <div class="alert alert-danger col-md-8 col-sm-12">
                <button class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                <h4><i class="icon-remove-sign"></i> Cancelled</h4>
                <p>@Model.ErrorMessage</p>
            </div>
        }
    </div>
</div>

<div class="row">
    <div class="col-md-12">

        @using (Html.BeginForm("ManageTasks", "Admin", FormMethod.Post, new { @class = "form form-horizontal" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.TaskId)
            @Html.HiddenFor(m => m.PersonListValue)

            <div class="validation-summary-errors alert-danger" id="validationError">
                @*<button class="close" data-dismiss="alert" aria-hidden="true">&times;</button>*@
                <ul>
                    <li style="display: none;"></li>
                </ul>
                @Html.ValidationSummary(false)
            </div>

            <div class="form-group">
                <label class="col-md-2 col-sm-3 control-label" for="inputText1">Title</label>
                <div class="col-md-6 col-sm-9">
                    <div style="padding-top:7px;">
                        @if (Model.HasAccess)
                        {
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                        }
                        else
                        {
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control", disabled = "disabled" })
                        }
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-2 col-sm-3 control-label" for="inputText1">Description</label>
                <div class="col-md-6 col-sm-9">
                    <div style="padding-top:7px;">
                        @if (Model.HasAccess)
                        {
                        @Html.TextAreaFor(m => m.Description, new { @class = "form-control", rows = "10", id = "summernote"})
                        }
                        else
                        {
                        @Html.TextAreaFor(m => m.Description, new { @class = "form-control", rows = "10", id = "summernote", disabled = "disabled" })
                        }
                    </div>
                </div>
            </div>
            <hr class="hr-normal">
    <div id="divTaskDetails" name="divTaskDetails">
        <div class="form-group">
            <label class="col-md-2 col-sm-3 control-label">Frequency</label>
            <div class="col-md-2 col-sm-3">
                <div style="padding-top:4px;">
                    @if (Model.HasAccess)
                    {
                        @Html.DropDownListFor(m => m.FrequencyListValue, @Model.FrequencyList, new { @class = "form-control" })
                    }
                    else
                    {
                        @Html.DropDownListFor(m => m.FrequencyListValue, @Model.FrequencyList, new { @class = "form-control", disabled = "disabled" })
                    }
                </div>
            </div>
            <div name="divDateFrequency" id="divdatefrequency">
                <div name="yearlyDiv" id="yearlyDiv" class="col-md-4 col-sm-6 row">
                    <div class="col-md-6 col-xs-6" style="margin: 0px; padding: 0 0px;">
                        <span class=" pull-left" style="padding-top:6px">Recur every year(s) on </span>
                    </div>
                    <div class="col-md-3 col-xs-3" style="margin: 0px; padding: 0 0px;">
                        @if (Model.HasAccess)
                        {
                            @Html.DropDownList("yearlyMonth", Model.MonthList, new { @class = "form-control form-control-inline" })
                        }
                        else
                        {
                            @Html.DropDownList("yearlyMonth", Model.MonthList, new { @class = "form-control form-control-inline", disabled = "disabled" })
                        }

                    </div>
                    <div class="col-md-3 col-xs-3" style="margin: 0px; padding: 0 0px;">
                        @if (Model.HasAccess)
                        {
                            <input type="number" name="yearlyDay" id="yearlyDay" class="form-control form-control-inline" min="1" max="31" data-toggle="tooltip" title="Day of the month" />
                        }
                        else
                        {
                            <input type="number" name="yearlyDay" id="yearlyDay" class="form-control form-control-inline" disabled="disabled" />
                        }

                    </div>
                </div>

                <div name="MonthlyDiv" id="MonthlyDiv" class="col-md-4 col-sm-6 row">
                    <div class="col-md-2 col-xs-2" style="margin: 0px; padding: 0 0px;">
                        <span class="pull-left" style="padding-top:6px">Day </span>
                    </div>
                    <div class="col-xs-3 col-md-3" style="margin: 0px; padding: 0 0px;">
                        @if (Model.HasAccess)
                        {
                            <input type="number" name="monthlyDay" id="monthlyDay" class="form-control form-control-inline" min="1" max="31" data-toggle="tooltip" title="Day of the month" />
                        }
                        else
                        {
                            <input type="number" name="monthlyDay" id="monthlyDay" class="form-control form-control-inline" disabled="disabled" />
                        }
                    </div>
                    <div class="col-xs-6 col-md-6" style="margin: 1px; padding: 1 1px;">
                        <span class="pull-left" style="padding-top:6px"> of every month </span>
                    </div>

                </div>

                <div name="QuaterlyDiv" id="QuaterlyDiv" class="col-md-4 col-sm-6 row">
                    <div class="col-md-1 col-xs-1" style="margin: 0px; padding: 0 0px;">
                        <span class="pull-left" style="padding-top:6px">Day </span>
                    </div>
                    <div class="col-md-2 col-xs-2" style="margin: 1px; padding: 0 0px;">
                        @if (Model.HasAccess)
                        {
                            <input type="number" name="quaterlyDay" id="quaterlyDay" class="form-control form-control-inline" min="1" max="31" data-toggle="tooltip" title="Day of the month" />
                        }
                        else
                        {
                            <input type="number" name="quaterlyDay" id="quaterlyDay" class="form-control form-control-inline" disabled="disabled" />
                        }

                    </div>
                    <div class="col-md-8 col-xs-8" style="margin: 0px; padding: 0 0px;">
                        <span class="pull-left" style="padding-top:6px">of the month every 3 months</span>
                    </div>

                </div>

                <div name="WeeklyDiv" id="WeeklyDiv" class="col-md-4 col-sm-6 row">
                    <div class="col-md-12 col-xs-12" style="margin: 0px; padding: 0 0px;">
                        <span style="padding-top:6px">Day of the week is determined from the initial due date</span>
                    </div>

                </div>
            </div>
        </div>
        <div class="form-group">
            <label class="col-md-2 col-sm-3 control-label" id="lvlInitialDueDate" name="lvlInitialDueDate">Initial Due Date</label>
            <div class="col-md-2 col-sm-3" id="divStartDate" name="divStartDate">
                <div style="padding-top:4px;" id="divStartDateChild" name="divStartDateChild">
                    @if (Model.HasAccess)
                    {
                        @Html.TextBoxFor(m => m.StartDate, "{0:MM/dd/yyyy}", new { @class = "form-control datepicker" })
                    }
                    else
                    {
                        @Html.TextBoxFor(m => m.StartDate, "{0:MM/dd/yyyy}", new { @class = "form-control", disabled = "disabled" })
                    }
                </div>
            </div>
            <label class="col-md-2 col-sm-3 control-label" id="lvlFinalDueDate">Final Due Date</label>
            <div class="col-md-2 col-sm-3" id="divFinalDueDate" name="divFinalDueDate">
                <div style="padding-top:4px;">
                    @if (Model.HasAccess)
                    {
                        @Html.TextBoxFor(m => m.EndDate, "{0:MM/dd/yyyy}", new { @class = "form-control datepicker", @Value = Model.EndDate == null ? "" : Model.EndDate.Value.ToString("MM/dd/yyyy"), })
                    }
                    else
                    {
                        @Html.TextBoxFor(m => m.EndDate, "{0:MM/dd/yyyy}", new { @class = "form-control", disabled = "disabled" })
                    }
                </div>
            </div>

        </div>

        <div class="form-group">
            <label class="col-md-2 col-sm-3 control-label">Reminder Days</label>
            <div class="col-md-2 col-sm-3">
                <div style="padding-top:4px;">
                    @if (Model.HasAccess)
                    {
                        @Html.TextBoxFor(m => m.WaitingPeriod, new { @class = "form-control", @type = "number" })
                    }
                    else
                    {
                        @Html.TextBoxFor(m => m.WaitingPeriod, new { @class = "form-control", @type = "number", disabled = "disabled" })
                    }
                </div>
            </div>

        </div>
        <div class="form-group">
            <label class="col-md-2 col-sm-3 control-label">Responsible Person(s)</label>
            <div class="col-md-6 col-sm-9 dropup">
                @if (Model.HasAccess)
                {
                    @Html.DropDownListFor(m => m.PersonListSelected, @Model.PersonList, new { @class = "form-control hide", multiple = "multiple" })
                }
                else
                {
                    @Html.TextBoxFor(m => m.NotificationListValue, new { @class = "form-control", disabled = "disabled" })
                    @*@Html.DropDownListFor(m => m.PersonListSelected, @Model.PersonList, new { @class = "form-control", multiple = "multiple" })*@
                }
                <a id="popoverOption" class="glyphicon glyphicon-user" href="#" data-content="" rel="popover" data-placement="top" data-html="true"></a>
            </div>

        </div>
        <div class="form-group">
            <label class="col-md-2 col-sm-3 control-label">Owner</label>
            <div class="col-md-6 col-sm-9 dropup">
                @if (Model.HasAccess)
                {
                    @Html.DropDownListFor(m => m.OwnerId, @Model.PersonList, new { @class = "form-control hide" })
                }
                else
                {
                    @Html.TextBoxFor(m => m.OwnerValue, new { @class = "form-control", disabled = "disabled" })
                    @*@Html.DropDownListFor(m => m.OwnerId, @Model.PersonList, new { @class = "form-control" })*@
                }
            </div>
        </div>
        <div class="form-actions form-actions-padding-sm form-actions-padding-md form-actions-padding-lg" style="margin-bottom: 0;">
            @if (Model.HasAccess)
            {
                <button class="btn btn-primary" type="submit" name="btnSave" id="btnSave" value="save">
                    <i class="icon-ok-sign"></i>
                    Save Changes
                </button>
                if (Model.TaskId != 0)
                {
                    <span style="margin:0px 20px;color:#ccc">|</span>
                    <button class="btn" type="submit" id="btnSave" name="btnSave" value="delete">
                        <i class="icon-power-off"></i>
                        Delete
                    </button>
                    @*<button class="btn btn-default" data-toggle="modal" data-target="#confirm-delete" type="submit" id="btnSave" name="btnSave" value="delete">
                            <i class="icon-power-off"></i>
                            Delete
                        </button>*@
                }
                else
                { 
                <span style="margin:0px 20px;color:#ccc">|</span>
                }
                <a href="@Url.Action("Index", "Admin")" class="btn btn-danger">
                    <i class="icon-remove-sign"></i>
                    Cancel
                </a>
            }
           
            @if (!Model.HasAccess && Model.TaskId != 0)
            {
                <a href="@Url.Action("Index", "Admin")" class="btn">
                    <i class="icon-remove-sign"></i>
                    Close
                </a>
            }
            
        </div>
    </div>
        }

        @*<div class="modal fade" id="confirm-delete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            Delete
                        </div>
                        <div class="modal-body">
                            Are you sure you want to delete the task defination ?
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                            <button class="btn btn-danger btn-ok" type="submit" id="btnSave" name="btnSave" value="delete">
                                <i class="icon-power-off"></i>
                                Delete
                            </button>
                        </div>
                    </div>
                </div>
            </div>*@
    </div>
</div>
